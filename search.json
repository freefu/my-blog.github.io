[{"title":"node操作mysql","url":"https://blog.guobaoyoo.com/2019/08/15/node操作mysql/","content":"<h5 id=\"常用简单的sql语句\"><a href=\"#常用简单的sql语句\" class=\"headerlink\" title=\"常用简单的sql语句\"></a>常用简单的sql语句</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"string\">`my-blog`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- show tables;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入</span></span><br><span class=\"line\"><span class=\"comment\">-- insert into users (username, `password`, realname) values ('lisi', '123', '李四');</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from users;</span></span><br><span class=\"line\"><span class=\"comment\">-- select id, username from users;</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from users where username='zhangsan';</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from users where username='zhangsan' and password='123';</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from users where username like '%zhang%';</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from users where password like '%1%' order by id desc; --排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 更新</span></span><br><span class=\"line\"><span class=\"comment\">-- update users set realname='李四2' where username='lisi';</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除和软删除</span></span><br><span class=\"line\"><span class=\"comment\">-- delete from users where username='lisi';</span></span><br><span class=\"line\"><span class=\"comment\">-- update users set state='0' where username='lisi';</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mysql --save</span><br></pre></td></tr></table></figure>\n<h5 id=\"node-操作-mysql\"><a href=\"#node-操作-mysql\" class=\"headerlink\" title=\"node 操作 mysql\"></a>node 操作 mysql</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mysql = <span class=\"built_in\">require</span>(<span class=\"string\">'mysql'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建连接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> con = mysql.createConnection(&#123;</span><br><span class=\"line\">  host: <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  user: <span class=\"string\">'root'</span>,</span><br><span class=\"line\">  password: <span class=\"string\">'pwd'</span>,</span><br><span class=\"line\">  port: <span class=\"string\">'3306'</span>,</span><br><span class=\"line\">  databases: <span class=\"string\">'my-blog'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 连接</span></span><br><span class=\"line\">con.connect()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查询</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sql = <span class=\"string\">'select id, username from users;'</span></span><br><span class=\"line\">con.query(sql, (err, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">con.end()</span><br></pre></td></tr></table></figure>","categories":[],"tags":["mysql nodejs"]},{"title":"favicon.ico","url":"https://blog.guobaoyoo.com/2019/05/05/favicon/","content":"<h5 id=\"favicon-ico\"><a href=\"#favicon-ico\" class=\"headerlink\" title=\"favicon.ico\"></a>favicon.ico</h5><blockquote>\n<p>所谓favicon，即Favorites Icon的缩写，顾名思义，便是其可以让浏览器的收藏夹中除显示相应的标题外，还以图标的方式区别不同的网站。当然，这不是Favicon的全部，根据浏览器的不同，Favicon显示也有所区别：在大多数主流浏览器如FireFox和Internet Explorer (5.5及以上版本)中，favicon不仅在收藏夹中显示，还会同时出现在地址栏上，这时用户可以拖曳favicon到桌面以建立到网站的快捷方式；除此之外，标签式浏览器甚至还有不少扩展的功能，如FireFox甚至支持动画格式的favicon等。</p>\n</blockquote>\n<h5 id=\"禁止-favicon-ico\"><a href=\"#禁止-favicon-ico\" class=\"headerlink\" title=\"禁止 favicon.ico\"></a>禁止 favicon.ico</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"data:;base64,=\"</span>&gt;</span></span><br></pre></td></tr></table></figure>","categories":[],"tags":["html"]},{"title":"vue.config.js 配置项","url":"https://blog.guobaoyoo.com/2019/05/02/vue-config.js/","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> assetsDir = <span class=\"string\">'static'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> resolve = <span class=\"function\"><span class=\"params\">dir</span> =&gt;</span> path.join(__dirname, dir)</span><br><span class=\"line\"><span class=\"comment\">// posix兼容方式处理路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> posixJoin = <span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> path.posix.join(assetsDir, _path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> lastVersion = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()</span><br><span class=\"line\"><span class=\"keyword\">const</span> isProd = process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// cdn开关</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> OPENCDN = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackHtmlOptions = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// dns预加载，优化接口请求</span></span><br><span class=\"line\">  dnsPrefetch: [<span class=\"string\">'https://fff.exmaple.com'</span>],</span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    vue: <span class=\"string\">'Vue'</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue-router'</span>: <span class=\"string\">'VueRouter'</span>,</span><br><span class=\"line\">    vuex: <span class=\"string\">'vuex'</span></span><br><span class=\"line\">    vant: <span class=\"string\">'vant'</span>,</span><br><span class=\"line\">    fastClick: <span class=\"string\">'FastClick'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  cdn: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 生产环境</span></span><br><span class=\"line\">    build: &#123;</span><br><span class=\"line\">      css: [<span class=\"string\">'https://cdn.jsdelivr.net/npm/vant@1.5/lib/index.css'</span>],</span><br><span class=\"line\">      js: [</span><br><span class=\"line\">        <span class=\"string\">'https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'https://cdn.jsdelivr.net/npm/vue-router@3.0.1/dist/vue-router.min.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'https://unpkg.com/vuex@3.0.1/dist/vuex.min.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'https://cdn.jsdelivr.net/npm/vant@1.5/lib/vant.min.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js'</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  publicPath: process.env.NODE_ENV === <span class=\"string\">'production'</span> ? <span class=\"string\">'/'</span> : <span class=\"string\">'/'</span>,</span><br><span class=\"line\">  outputDir: <span class=\"string\">'dist'</span>,</span><br><span class=\"line\">  lintOnSave: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  transpileDependencies: [],</span><br><span class=\"line\">  productionSourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  chainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除懒加载模块的 prefetch preload，降低带宽压力</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    config.plugins.delete(<span class=\"string\">'prefetch'</span>).delete(<span class=\"string\">'preload'</span>)</span><br><span class=\"line\">    config.resolve.alias</span><br><span class=\"line\">      .set(<span class=\"string\">'vue$'</span>, <span class=\"string\">'vue/dist/vue.esm.js'</span>)</span><br><span class=\"line\">      .set(<span class=\"string\">'common'</span>, resolve(<span class=\"string\">'src/common'</span>))</span><br><span class=\"line\">      .set(<span class=\"string\">'@'</span>, resolve(<span class=\"string\">'src'</span>))</span><br><span class=\"line\">    <span class=\"comment\">// 清除警告</span></span><br><span class=\"line\">    config.performance.set(<span class=\"string\">'hints'</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 将版本号写入环境变量</span></span><br><span class=\"line\">    config.plugin(<span class=\"string\">'define'</span>).tap(<span class=\"function\"><span class=\"params\">args</span> =&gt;</span> &#123;</span><br><span class=\"line\">      args[<span class=\"number\">0</span>][<span class=\"string\">'app_build_version'</span>] = lastVersion</span><br><span class=\"line\">      <span class=\"keyword\">return</span> args</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    config.when(isProd, config =&gt;</span><br><span class=\"line\">      <span class=\"comment\">// 生产环境js增加版本号</span></span><br><span class=\"line\">      config.output</span><br><span class=\"line\">        .set(<span class=\"string\">'filename'</span>, posixJoin(<span class=\"string\">`js/<span class=\"subst\">$&#123;lastVersion&#125;</span>-[name].[chunkhash].js`</span>))</span><br><span class=\"line\">        .set(</span><br><span class=\"line\">          <span class=\"string\">'chunkFilename'</span>,</span><br><span class=\"line\">          posixJoin(<span class=\"string\">`js/<span class=\"subst\">$&#123;lastVersion&#125;</span>-[id].[chunkhash].js`</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加CDN参数到htmlWebpackPlugin配置中， 修改 public/index.html</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    config.plugin(<span class=\"string\">'html'</span>).tap(<span class=\"function\"><span class=\"params\">args</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 生产环境将cdn写入webpackHtmlOptions，在public/index.html应用</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isProd &amp;&amp; OPENCDN) &#123;</span><br><span class=\"line\">        args[<span class=\"number\">0</span>].cdn = webpackHtmlOptions.cdn.build</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// dns预加载</span></span><br><span class=\"line\">      args[<span class=\"number\">0</span>].dnsPrefetch = webpackHtmlOptions.dnsPrefetch</span><br><span class=\"line\">      <span class=\"keyword\">return</span> args</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  configureWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    config.resolve.extensions = [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isProd) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 开启cdn状态：externals不进入webpack打包</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (OPENCDN) &#123;</span><br><span class=\"line\">        config.externals = webpackHtmlOptions.externals</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  css: &#123;</span><br><span class=\"line\">    extract: !isProd</span><br><span class=\"line\">      ? <span class=\"literal\">false</span></span><br><span class=\"line\">      : &#123;</span><br><span class=\"line\">        filename: posixJoin(<span class=\"string\">`css/<span class=\"subst\">$&#123;lastVersion&#125;</span>-[name].[contenthash:8].css`</span>),</span><br><span class=\"line\">        chunkFilename: posixJoin(</span><br><span class=\"line\">          <span class=\"string\">`css/<span class=\"subst\">$&#123;lastVersion&#125;</span>-[name].[contenthash:8].css`</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    sourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    loaderOptions: &#123;</span><br><span class=\"line\">      css: &#123;&#125;,</span><br><span class=\"line\">      postcss: &#123;</span><br><span class=\"line\">        plugins: [</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">'autoprefixer'</span>)(&#123;</span><br><span class=\"line\">            browsers: [</span><br><span class=\"line\">              <span class=\"string\">'last 10 Chrome versions'</span>,</span><br><span class=\"line\">              <span class=\"string\">'last 5 Firefox versions'</span>,</span><br><span class=\"line\">              <span class=\"string\">'Safari &gt;= 6'</span>,</span><br><span class=\"line\">              <span class=\"string\">'ie&gt; 8'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-px2rem'</span>)(&#123;</span><br><span class=\"line\">            remUnit: <span class=\"number\">37.5</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// modules: false</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  parallel: <span class=\"built_in\">require</span>(<span class=\"string\">'os'</span>).cpus().length &gt; <span class=\"number\">1</span>,</span><br><span class=\"line\">  pwa: &#123;&#125;,</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    open: <span class=\"literal\">true</span>, <span class=\"comment\">// 配置自启浏览器</span></span><br><span class=\"line\">    host: <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\">    port: <span class=\"number\">8088</span>,</span><br><span class=\"line\">    https: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    hot: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    hotOnly: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    disableHostCheck: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  pluginOptions: &#123;&#125;,</span><br><span class=\"line\">  runtimeCompiler: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[],"tags":["vue"]},{"title":"微信开发前端总结","url":"https://blog.guobaoyoo.com/2019/05/02/微信开发总结/","content":"<p>好久没有更新，总之是变得懒惰了…趁着假期，把之前的项目总结一下，大概是微信h5开发的一些相关东西。</p>\n<h4 id=\"微信授权登录\"><a href=\"#微信授权登录\" class=\"headerlink\" title=\"微信授权登录\"></a>微信授权登录</h4><p>关于网页授权的两种scope的区别说明</p>\n<ul>\n<li>以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）</li>\n<li>以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。</li>\n<li>用户管理类接口中的“获取用户基本信息接口”，是在用户和公众号产生消息交互或关注后事件推送后，才能根据用户OpenID来获取用户基本信息。这个接口，包括其他微信接口，都是需要该用户（即openid）关注了公众号后，才能调用成功的。</li>\n</ul>\n<p>简单点说，在业务逻辑中，前端判断用户登录态为未登录或者前端请求后端接口，后端返回用户未登录时，前端跳转一个特定链接A到微信，然后微信重定向回特定的（以参数形式带在A上）前端页面，然后前端获取code，发送给后端登录后进而获取用户信息。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 授权</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getUserInfo2, getCode &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@/api/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'@/router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Toast &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vant'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> authorize = <span class=\"function\"><span class=\"params\">store</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> code = router.history.current.query.__state</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (code !== <span class=\"string\">''</span> &amp;&amp; code !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 授权成功</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取用户信息并且保存用户信息</span></span><br><span class=\"line\">    getUserInfo2(code).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">      store.commit(<span class=\"string\">'SET_USER'</span>, res.data)</span><br><span class=\"line\">      store.commit(<span class=\"string\">'SET_LOGIN'</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (code === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 授权失败</span></span><br><span class=\"line\">    Toast(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'授权失败，请刷新重试'</span>, <span class=\"attr\">duration</span>: <span class=\"number\">1500</span> &#125;)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> url = location.href.indexOf(<span class=\"string\">'?'</span>) &gt; <span class=\"number\">-1</span> ? location.href + <span class=\"string\">'&amp;__state=suc'</span> : location.href + <span class=\"string\">'?__state=suc'</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里是通过后端去跳转的，避免暴露appid等信息，又能及时保存登录态，其实放在前端去跳转也可以，但是需要有个单独的授权页面去处理这些逻辑</span></span><br><span class=\"line\">    getUrl(&#123; <span class=\"attr\">url</span>: url &#125;)</span><br><span class=\"line\">      .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = res.data</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(err))</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"微信支付\"><a href=\"#微信支付\" class=\"headerlink\" title=\"微信支付\"></a>微信支付</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  onBridgeReady (obj, orderid) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _self = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.WeixinJSBridge.invoke(</span><br><span class=\"line\">      <span class=\"string\">'getBrandWCPayRequest'</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">'appId'</span>: obj.appId, <span class=\"comment\">// 公众号名称，由商户传入</span></span><br><span class=\"line\">        <span class=\"string\">'timeStamp'</span>: obj.timeStamp, <span class=\"comment\">// 时间戳，自1970年以来的秒数</span></span><br><span class=\"line\">        <span class=\"string\">'nonceStr'</span>: obj.nonceStr, <span class=\"comment\">// 随机串</span></span><br><span class=\"line\">        <span class=\"string\">'package'</span>: obj.package,</span><br><span class=\"line\">        <span class=\"string\">'signType'</span>: obj.signType, <span class=\"comment\">// 微信签名方式：</span></span><br><span class=\"line\">        <span class=\"string\">'paySign'</span>: obj.paySign <span class=\"comment\">// 微信签名</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.err_msg === <span class=\"string\">'get_brand_wcpay_request:ok'</span>) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 支付成功</span></span><br><span class=\"line\">          <span class=\"comment\">// todo</span></span><br><span class=\"line\">          &#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(err))</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          Toast(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'支付失败'</span>, <span class=\"attr\">duration</span>: <span class=\"number\">1500</span> &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  pay () &#123;</span><br><span class=\"line\">    wechatPay().then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// let o = res.orderNo 订单id</span></span><br><span class=\"line\">      <span class=\"comment\">// let p = JSON.parse(res.params) 需要携带参数，涉及具体业务逻辑</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge === <span class=\"string\">'undefined'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, <span class=\"keyword\">this</span>.onBridgeReady, <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, <span class=\"keyword\">this</span>.onBridgeReady)</span><br><span class=\"line\">          <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, <span class=\"keyword\">this</span>.onBridgeReady)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 唤起支付</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.onBridgeReady(p, o)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(err))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"微信分享\"><a href=\"#微信分享\" class=\"headerlink\" title=\"微信分享\"></a>微信分享</h4><p>微信分享需要引入微信js-sdk，建议cdn引入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// todo</span></span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["vue"]},{"title":"window.history","url":"https://blog.guobaoyoo.com/2019/04/07/history/","content":"<p>在工作中遇见一种需求，在用户点击回退按钮时为了挽留用户，会监听这个返回事件从而进行一些操作，就会用到history对象的pushState方法，在这里记录一下</p>\n<h3 id=\"window-history对象\"><a href=\"#window-history对象\" class=\"headerlink\" title=\"window.history对象\"></a>window.history对象</h3><blockquote>\n<p>Window.history是一个只读属性，用来获取History 对象的引用，History 对象提供了操作浏览器会话历史（浏览器地址栏中访问的页面，以及当前页面中通过框架加载的页面）的接口</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>在chrome控制台输入history回车可见，history有 ‘length’, ‘scrollRestoration’, ‘state’三个属性，展开 <strong>proto</strong> 发现有 back, forward, go, pushState, replaceState 等方法</p>\n<h3 id=\"pushState-和-replaceState\"><a href=\"#pushState-和-replaceState\" class=\"headerlink\" title=\"pushState 和 replaceState\"></a>pushState 和 replaceState</h3><p>添加和修改历史记录中的条目<br>语法 history.pushState(state, title, url)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> stateObj = &#123;</span><br><span class=\"line\">  foo: <span class=\"string\">'bar'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">history.pushState(stateObj, <span class=\"string\">'page 1'</span>, <span class=\"string\">'#'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>history.replaceState() 的使用与 history.pushState() 非常相似，区别在于  replaceState()  是修改了当前的历史记录项而不是新建一个。 注意这并不会阻止其在全局浏览器历史记录中创建一个新的历史记录项。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> stateObj = &#123;</span><br><span class=\"line\">    foo: <span class=\"string\">\"bar\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">history.replaceState(stateObj, <span class=\"string\">\"page 2\"</span>, <span class=\"string\">\"bar.html\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"popstate事件\"><a href=\"#popstate事件\" class=\"headerlink\" title=\"popstate事件\"></a>popstate事件</h3><blockquote>\n<p>每当活动的历史记录项发生变化时， popstate 事件都会被传递给window对象。如果当前活动的历史记录项是被 pushState 创建的，或者是由 replaceState 改变的，那么 popstate 事件的状态属性 state 会包含一个当前历史记录状态对象的拷贝。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'popstate'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'back btn click'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"用户点击回退按钮对之进行”挽留”\"><a href=\"#用户点击回退按钮对之进行”挽留”\" class=\"headerlink\" title=\"用户点击回退按钮对之进行”挽留”\"></a>用户点击回退按钮对之进行”挽留”</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hisPush = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">    key: <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.history.pushState(params, <span class=\"string\">''</span>, <span class=\"string\">'#'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> popstateEvent = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'back btn click'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">hisPush()</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'popstate'</span>, popstateEvent)</span><br><span class=\"line\"><span class=\"comment\">// 记得在单页中销毁绑定的回退事件</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">'popstate'</span>, popstateEvent)</span><br></pre></td></tr></table></figure>","categories":[],"tags":["javascript"]},{"title":"cookie","url":"https://blog.guobaoyoo.com/2019/04/03/cookie/","content":"<p>平时在工作中经常用到对cookie进行操作的方法</p>\n<h3 id=\"getCookie\"><a href=\"#getCookie\" class=\"headerlink\" title=\"getCookie\"></a>getCookie</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getCookie</span> (<span class=\"params\">c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dc = <span class=\"built_in\">document</span>.cookie</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dc.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cs = dc.indexOf(c + <span class=\"string\">'='</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cs !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      cs = cs + c.length + <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> ce = dc.indexOf(<span class=\"string\">';'</span>, cs)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ce === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        ce = dc.length</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">decodeURI</span>(dc.substring(cs, ce))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"setCookie\"><a href=\"#setCookie\" class=\"headerlink\" title=\"setCookie\"></a>setCookie</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setCookie</span> (<span class=\"params\">c, v, e</span>) </span>&#123;  <span class=\"comment\">// e为毫秒，改变setTime改变单位</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">  a.setTime(a.getTime() + e) </span><br><span class=\"line\">  <span class=\"built_in\">document</span>.cookie = c + <span class=\"string\">'='</span> + <span class=\"built_in\">escape</span>(v) + ((e == <span class=\"literal\">null</span>) ? <span class=\"string\">''</span> : <span class=\"string\">';expires='</span> + a.toUTCString())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[],"tags":["javascript"]},{"title":"vue中watch数组","url":"https://blog.guobaoyoo.com/2019/03/23/vue中watch数组/","content":"<p>在项目开发中遇见一个小问题，做个记录</p>\n<h5 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h5><p>有一个空数组，我通过某个事件对这个数组进行一些操作，然后用这个数组去做一些判断，但是发现没有起作用，然后我就想可以用watch监听一下是否这个数组已经发生改变，后来发现并没有执行打印，然后通过查询才知道通过下标对数组进行的某些操作是无法watch到变化的。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    arr: []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">watch: &#123;</span><br><span class=\"line\">  arr (<span class=\"keyword\">new</span>, old) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span>, old) <span class=\"comment\">// 这里不会打印</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  changeArr () &#123;</span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = <span class=\"string\">'hello world'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><p>通过 <code>this.$set(arr, index, newVal)</code> 来进行赋值</p>\n","categories":[],"tags":["vue"]},{"title":"requestAnimationFrame","url":"https://blog.guobaoyoo.com/2019/02/18/requestAnimationFrame/","content":"<p>前端实现动画的方式有很多种</p>\n<ul>\n<li>html5 canvas</li>\n<li>css3 animation + @keyframes</li>\n<li>css3 transition</li>\n<li>js setTimeout / setInterval</li>\n</ul>\n<p>之前工作当中多多少少都有接触到也用过这些，但是没有用过requestAnimationFrame(以下都简写为RAF)</p>\n<h5 id=\"RAF是什么\"><a href=\"#RAF是什么\" class=\"headerlink\" title=\"RAF是什么\"></a>RAF是什么</h5><blockquote>\n<p>window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行</p>\n</blockquote>\n","categories":[],"tags":["javascript"]},{"title":"js中this的指向问题","url":"https://blog.guobaoyoo.com/2019/02/15/js中this的指向问题/","content":"<h5 id=\"this到底是什么呢\"><a href=\"#this到底是什么呢\" class=\"headerlink\" title=\"this到底是什么呢\"></a>this到底是什么呢</h5><p>this是JavaScript里的一个关键字<br>this是包含它的函数作为方法被调用时所属的对象</p>\n<ul>\n<li>包含它的函数</li>\n<li>被调用</li>\n<li>所属的对象</li>\n</ul>\n<a id=\"more\"></a>\n<h5 id=\"包含this的函数被调用的几种情况\"><a href=\"#包含this的函数被调用的几种情况\" class=\"headerlink\" title=\"包含this的函数被调用的几种情况\"></a>包含this的函数被调用的几种情况</h5><p>1.<b>纯粹的函数调用</b><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo() === <span class=\"built_in\">window</span> <span class=\"comment\">// 等同于 window.foo() === window</span></span><br><span class=\"line\"><span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p>由以上代码得知：foo作为纯粹的函数调用时，foo所属对象是全局的window，所以this指向window</p>\n<p>2.<b>作为对象的方法被调用</b><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'obj'</span>,</span><br><span class=\"line\">  foo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.foo()</span><br><span class=\"line\"><span class=\"comment\">// obj</span></span><br></pre></td></tr></table></figure></p>\n<p>由以上代码得知：foo作为obj对象的方法被调用时，foo所属对象是obj，所以this指向obj</p>\n<p>3.<b>作为构造函数被调用时</b><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = <span class=\"string\">'foo'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newFoo = <span class=\"keyword\">new</span> foo()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newFoo.name)</span><br><span class=\"line\"><span class=\"comment\">// foo</span></span><br></pre></td></tr></table></figure></p>\n<p>这里怎么解释呢？这就得看new运算符到底做了什么操作，call又做了哪些操作。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// new内部原理</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> foo() = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;&#125;</span><br><span class=\"line\">  obj.__proto__ = foo.prototype</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = foo.call(obj)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span>(result === <span class=\"string\">'object'</span>) ? result : obj</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// call 内部原理</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.mycall = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> context = context || <span class=\"built_in\">window</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> args = []</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result</span><br><span class=\"line\">  args = [...arguments].slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">  context.f = <span class=\"keyword\">this</span></span><br><span class=\"line\">  result = context.f(...args)</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> context.f()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>由以上代码得知：foo作为构造函数被调用时，foo所属对象是构造出来的新对象，所以this指向构造出来的新对象newFoo</p>\n<p>4.<b>call和apply调用</b><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'windowName'</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'obj'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo.call(obj)</span><br><span class=\"line\"><span class=\"comment\">// obj</span></span><br></pre></td></tr></table></figure></p>\n<p>原理同上一个</p>\n<h5 id=\"es6箭头函数中的this\"><a href=\"#es6箭头函数中的this\" class=\"headerlink\" title=\"es6箭头函数中的this\"></a>es6箭头函数中的this</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'windowName'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">f1()</span><br><span class=\"line\"><span class=\"comment\">// windowName</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'objName'</span>,</span><br><span class=\"line\">  f2: f1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.f2()</span><br><span class=\"line\"><span class=\"comment\">// windowName</span></span><br></pre></td></tr></table></figure>\n<p>由此可知<u>箭头函数中的this对象是函数定义时所属对象</u>，并不是函数调用时所属对象</p>\n<h5 id=\"改变this指向的方法\"><a href=\"#改变this指向的方法\" class=\"headerlink\" title=\"改变this指向的方法\"></a>改变this指向的方法</h5><p>1.<b>call()和apply()</b><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'obj1'</span>,</span><br><span class=\"line\">  f: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'obj2'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj1.f.call(obj2)</span><br><span class=\"line\"><span class=\"comment\">// obj2</span></span><br></pre></td></tr></table></figure></p>\n<p>由于this指向包含他的函数作为方法被调用时所属的对象，所以call和apply都能改变this的指向</p>\n<p>2.<b>bind()</b><br>这个bind()是怎么改变this指向的呢？需要看一下bind()是做什么的</p>\n<blockquote>\n<p>定义：bind()方法创建一个新的函数，在调用时设置this关键字为提供的值。并在调用新函数时，将给定参数列表作为原函数的参数序列的前若干项。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bind() 实现原理</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.bind = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>,                        <span class=\"comment\">// 保存原函数</span></span><br><span class=\"line\">      context = [].shift.call(<span class=\"built_in\">arguments</span>), <span class=\"comment\">// 保存需要绑定的this上下文 第一个参数</span></span><br><span class=\"line\">      args = [].slice.call(<span class=\"built_in\">arguments</span>);    <span class=\"comment\">// 剩余的参数转为数组</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;                    <span class=\"comment\">// 返回一个新函数</span></span><br><span class=\"line\">    self.apply(context,[].concat.call(args, [].slice.call(<span class=\"built_in\">arguments</span>)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'windowName'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'obj'</span>,</span><br><span class=\"line\">  f: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = obj.f</span><br><span class=\"line\">f1()</span><br><span class=\"line\"><span class=\"comment\">// windowName</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = f1.bind(obj)</span><br><span class=\"line\">f2()</span><br><span class=\"line\"><span class=\"comment\">// obj</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>这里可以看出来bind方法返回的是一个方法，并不像call和apply那样直接调用</p>\n","categories":[],"tags":["javascript"]},{"title":"js继承的几种方法以及缺陷","url":"https://blog.guobaoyoo.com/2019/02/13/js实现继承的几种方法/","content":"<p>通过继承，我们能十分优雅的实现现有代码的重用，记录一下js中实现继承的几种方法</p>\n<a id=\"more\"></a>\n<h5 id=\"通过构造函数实现继承\"><a href=\"#通过构造函数实现继承\" class=\"headerlink\" title=\"通过构造函数实现继承\"></a>通过构造函数实现继承</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">P</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = <span class=\"string\">'parent'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  P.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = <span class=\"string\">'18'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.name) <span class=\"comment\">// 'parent'</span></span><br><span class=\"line\"></span><br><span class=\"line\">P.prototype.say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'hi'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.say())  <span class=\"comment\">// Uncaught TypeError: o.say is not a function</span></span><br><span class=\"line\"><span class=\"comment\">// 这里明显继承不了p原型对象上的方法</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"通过原型链实现继承\"><a href=\"#通过原型链实现继承\" class=\"headerlink\" title=\"通过原型链实现继承\"></a>通过原型链实现继承</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">P</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = <span class=\"string\">'parent'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.class = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = <span class=\"string\">'18'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">C.prototype = <span class=\"keyword\">new</span> P()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.name) <span class=\"comment\">// 'parent'</span></span><br><span class=\"line\"></span><br><span class=\"line\">P.prototype.say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'hi'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.say())  <span class=\"comment\">// 'hi'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o2 = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"keyword\">let</span> o3 = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\">o3.class.push(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.class, o2.class, o3.class)  <span class=\"comment\">// (5) [1, 2, 3, 4, 5] (5) [1, 2, 3, 4, 5] (5) [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"><span class=\"comment\">// 这里所有实例的class都被修改了，明显不是继承的最好办法</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"混合写法\"><a href=\"#混合写法\" class=\"headerlink\" title=\"混合写法\"></a>混合写法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">P</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = <span class=\"string\">'parent'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.class = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  P.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = <span class=\"string\">'18'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">C.prototype = <span class=\"keyword\">new</span> P()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.name) <span class=\"comment\">// 'parent'</span></span><br><span class=\"line\"></span><br><span class=\"line\">P.prototype.say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'hi'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.say())  <span class=\"comment\">// 'hi'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o2 = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"keyword\">let</span> o3 = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\">o3.class.push(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.class, o2.class, o3.class)  <span class=\"comment\">// (4) [1, 2, 3, 4] (4) [1, 2, 3, 4] (5) [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"><span class=\"comment\">// 这种方法还是ok的，but...</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.constructor === C, o.constructor === P)  <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 这里分不出实例到底是父构造函数构造的还是子构造函数构造的了，so还不是最好的办法</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"混合办法优化\"><a href=\"#混合办法优化\" class=\"headerlink\" title=\"混合办法优化\"></a>混合办法优化</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">P</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = <span class=\"string\">'parent'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.class = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  P.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = <span class=\"string\">'18'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// C.prototype = new P()</span></span><br><span class=\"line\"><span class=\"comment\">// C.prototype = P.prototype</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">Object</span>.create(P.prototype)</span><br><span class=\"line\">C.prototype = obj <span class=\"comment\">// 这里为了原型链串起来 obj这个新对象的原型对象就是P.prototype这个对象</span></span><br><span class=\"line\">C.prototype.constructor = C</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> C</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(o.constructor === C, o.constructor === P) <span class=\"comment\">// true false</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"es6的继承写法\"><a href=\"#es6的继承写法\" class=\"headerlink\" title=\"es6的继承写法\"></a>es6的继承写法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">P</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'parent'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  say () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'hi'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">extends</span> <span class=\"title\">P</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c)</span><br><span class=\"line\"><span class=\"comment\">// C &#123;name: \"parent\", age: 18&#125;</span></span><br></pre></td></tr></table></figure>","categories":[],"tags":["javascript"]},{"title":"VSCode配置相关","url":"https://blog.guobaoyoo.com/2019/01/26/VSCode/","content":"<p>记录一下自己使用vscode时的一些配置</p>\n<a id=\"more\"></a>\n<h5 id=\"用户代码片段\"><a href=\"#用户代码片段\" class=\"headerlink\" title=\"用户代码片段\"></a>用户代码片段</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"Print to console\"</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"prefix\"</span>: <span class=\"string\">\"vue\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"body\"</span>: [</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;!-- $0 --&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;template&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  &lt;div&gt;&lt;/div&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;/template&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;script&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"export default &#123;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  data () &#123;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"    return &#123;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"    &#125;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  &#125;,\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  components: &#123;&#125;,\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  computed: &#123;&#125;,\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  methods: &#123;&#125;,\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  created () &#123; &#125;,\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"  mounted () &#123; &#125;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&#125;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;/script&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;style scoped lang=\\\"stylus\\\"&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;/style&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t\t<span class=\"string\">\"description\"</span>: <span class=\"string\">\"Log output to console\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h5><ul>\n<li>Atom One Light Theme</li>\n<li>Beautify</li>\n<li>Chinese</li>\n<li>Eslint</li>\n<li>language-stylus</li>\n<li>prettier-Code formatter</li>\n<li>Vetur</li>\n</ul>\n<h5 id=\"setting-json\"><a href=\"#setting-json\" class=\"headerlink\" title=\"setting.json\"></a>setting.json</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;editor.fontSize&quot;: 12,</span><br><span class=\"line\">  // Specifies the location of snippets in the suggestion widget</span><br><span class=\"line\">  &quot;editor.snippetSuggestions&quot;: &quot;top&quot;,</span><br><span class=\"line\">  // Controls whether format on paste is on or off</span><br><span class=\"line\">  &quot;editor.formatOnPaste&quot;: true,</span><br><span class=\"line\">  &quot;editor.tabSize&quot;: 2,</span><br><span class=\"line\">  &quot;explorer.confirmDelete&quot;: false,</span><br><span class=\"line\">  // 是否开启eslint检测</span><br><span class=\"line\">  &quot;eslint.enable&quot;: true,</span><br><span class=\"line\">  // 文件保存时，是否自动根据eslint进行格式化</span><br><span class=\"line\">  &quot;eslint.autoFixOnSave&quot;: true,</span><br><span class=\"line\">  &quot;eslint.validate&quot;: [</span><br><span class=\"line\">      &quot;javascript&quot;,</span><br><span class=\"line\">      &quot;javascriptreact&quot;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          &quot;language&quot;: &quot;html&quot;,</span><br><span class=\"line\">          &quot;autoFix&quot;: true</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          &quot;language&quot;: &quot;vue&quot;,</span><br><span class=\"line\">          &quot;autoFix&quot;: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;workbench.colorTheme&quot;: &quot;Atom One Light&quot;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[],"tags":["VSCode"]},{"title":"常用linux命令汇总","url":"https://blog.guobaoyoo.com/2018/12/22/常用linux命令总结/","content":"<p>身为一个前端，也经常会使用到一些linux命令，so在此记录一下经常会用到的linux命令，方便以后查询和记忆。</p>\n<a id=\"more\"></a>\n<h5 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'cd 文件夹名'</span> <span class=\"comment\">// 进入文件夹</span></span><br><span class=\"line\"><span class=\"string\">'cd'</span> .. <span class=\"comment\">// 返回上一级</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'cd naonao'</span> <span class=\"comment\">// 进入naonao文件夹</span></span><br><span class=\"line\"><span class=\"string\">'ls'</span>  <span class=\"comment\">// 列出闹闹文件夹下包含的内容</span></span><br><span class=\"line\"><span class=\"string\">'ll'</span>  <span class=\"comment\">// 列出闹闹文件夹下包含的详细内容</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'mkdir dist'</span>  <span class=\"comment\">// 新建dist文件夹</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"touch\"><a href=\"#touch\" class=\"headerlink\" title=\"touch\"></a>touch</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'cd dist'</span>  <span class=\"comment\">// 进入dist文件夹</span></span><br><span class=\"line\"><span class=\"string\">'touch index.html'</span>  <span class=\"comment\">// 创建index.html</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"clear\"><a href=\"#clear\" class=\"headerlink\" title=\"clear\"></a>clear</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'clear'</span> <span class=\"comment\">// 清除当前窗口内容</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'rm 文件名'</span> <span class=\"comment\">// 删除文件</span></span><br><span class=\"line\"><span class=\"string\">'rm 空文件夹名'</span> <span class=\"comment\">// 删除空文件夹</span></span><br><span class=\"line\"><span class=\"string\">'rm -r 文件夹名'</span>  <span class=\"comment\">// 删除文件夹，不管其下有多少级目录，一并删除</span></span><br><span class=\"line\"><span class=\"string\">'rm -f 文件名'</span>  <span class=\"comment\">// 强制删除，没有提示</span></span><br><span class=\"line\"><span class=\"string\">'rm -rf 文件夹名'</span> <span class=\"comment\">// 删除当前目录下的所有文件并不提示（不能恢复，慎用）</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"scp\"></a>scp</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'scp -r ./* root@xx.xx.xxx.xx:/xxx1'</span>  <span class=\"comment\">// 复制当前文件夹下所有内容到服务器上xxx1目录</span></span><br><span class=\"line\"><span class=\"comment\">// scp -r ./* root@47.94.230.43:/root/www/test</span></span><br></pre></td></tr></table></figure>","categories":[],"tags":["linux"]},{"title":"理解原型链","url":"https://blog.guobaoyoo.com/2018/12/17/理解原型链/","content":"<p>一段时间之后发现自己又忘了这个概念，估计是理解的不透彻，今天画下图，再记忆一下</p>\n<a id=\"more\"></a>\n<p><img src=\"http://static.guobaoyoo.com/img/blog/prototype.png\" alt=\"image\"></p>\n<p>上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> Person = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'freefu'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(p1)</span><br><span class=\"line\"><span class=\"keyword\">let</span> p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'liulian'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(p2)</span><br><span class=\"line\"><span class=\"comment\">// Person &#123;name: \"freefu\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// Person &#123;name: \"liulian\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要给p1 p2或者更多的实例增加一个say方法</span></span><br><span class=\"line\">p1.__proto__.say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'I can say'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p1.say()</span><br><span class=\"line\"><span class=\"comment\">// say hi</span></span><br><span class=\"line\">p2.say()</span><br><span class=\"line\"><span class=\"comment\">// say hi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要给p1 p2或者更多的实例增加一个walk方法</span></span><br><span class=\"line\">Person.prototype.walk = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'I can walk'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p1.walk()</span><br><span class=\"line\"><span class=\"comment\">// I can walk</span></span><br><span class=\"line\">p2.walk()</span><br><span class=\"line\"><span class=\"comment\">// I can walk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要给p1 p2或者更多的实例增加一个eat方法</span></span><br><span class=\"line\"><span class=\"comment\">// 应该不会有人直接这样写</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.eat = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'I can eat'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p1.eat()</span><br><span class=\"line\"><span class=\"comment\">// I can eat</span></span><br><span class=\"line\">p2.eat()</span><br><span class=\"line\"><span class=\"comment\">// I can eat</span></span><br></pre></td></tr></table></figure>\n<p>输出p1</p>\n<p><img src=\"http://static.guobaoyoo.com/img/blog/proto-p1.png\" alt=\"image\"></p>\n<p>可以看到一开始p1的say方法，walk方法，eat方法都在哪里，是怎么样一层一层网上找的。</p>\n","categories":[],"tags":["javascript"]},{"title":"有关 XSS","url":"https://blog.guobaoyoo.com/2018/12/12/有关XSS攻击/","content":"<p>记录一下<code>XSS</code>的攻击方式和防御</p>\n<h5 id=\"XSS-全称\"><a href=\"#XSS-全称\" class=\"headerlink\" title=\"XSS 全称\"></a>XSS 全称</h5><p>XSS:<br>跨站脚本<br>cross site script<br>为了避免与样式 CSS 混淆，所以简称为 XSS</p>\n<a id=\"more\"></a>\n<h5 id=\"XSS-攻击分类\"><a href=\"#XSS-攻击分类\" class=\"headerlink\" title=\"XSS 攻击分类\"></a>XSS 攻击分类</h5><h6 id=\"反射性\"><a href=\"#反射性\" class=\"headerlink\" title=\"反射性\"></a>反射性</h6><p>定义：<br>发出请求时，XSS代码出现在URL中，作为输入提交到服务器端，服务器端解析后响应，XSS代码随响应内容一起传回给浏览器，最后浏览器解析执行XSS代码。这个过程像一次反射，故叫反射性XSS</p>\n<p>示例：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数上的内容渲染到页面</span></span><br><span class=\"line\"><span class=\"comment\">// https://www.test.com/index.php?xss=hello</span></span><br><span class=\"line\"><span class=\"comment\">// 正常显示hello</span></span><br><span class=\"line\"><span class=\"comment\">// 换成XSS脚本</span></span><br><span class=\"line\"><span class=\"comment\">// https://www.test.com/index.php?xss=&lt;img src=\"null\" onerror=\"alert(1)\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// alert(1)可以换成任何攻击型代码</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"存储型\"><a href=\"#存储型\" class=\"headerlink\" title=\"存储型\"></a>存储型</h6><p>定义：<br>存储型XSS和反射型XSS的差别仅在于，提交的代码会存储在服务器端（数据库，内存，文件系统等），下次请求目标页面时不用再次提交XSS代码</p>\n<p>示例：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用户提交评论处提交以下代码</span></span><br><span class=\"line\"><span class=\"comment\">// css : body &#123;display: none&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// javascript : &lt;script&gt;alert(1)&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// iframe : &lt;iframe src=\"/test.html\"&gt;&lt;/iframe&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h5><ul>\n<li>编码：字符对应转义字符</li>\n<li>过滤：移除用户上传的DOM属性，如onerror等，移除用户上传的style节点，script节点，iframe、frame节点</li>\n<li>校正：避免直接对HTML Entity解码，使用DOM Parse转换，校正不配对的DOM标签</li>\n</ul>\n","categories":[],"tags":["javascript"]},{"title":"有关 CSRF","url":"https://blog.guobaoyoo.com/2018/12/04/有关CSRF攻击/","content":"<p>记录一下<code>CSRF</code>的攻击方式和防御</p>\n<h5 id=\"CSRF-全称\"><a href=\"#CSRF-全称\" class=\"headerlink\" title=\"CSRF 全称\"></a>CSRF 全称</h5><p>CSRF:<br>Cross-site request forgery<br>跨站请求伪造</p>\n<a id=\"more\"></a>\n<h5 id=\"攻击原理\"><a href=\"#攻击原理\" class=\"headerlink\" title=\"攻击原理\"></a>攻击原理</h5><div style=\"width: 600px; height: 500px;\"><br><img src=\"http://static.guobaoyoo.com/img/blog/CSRF.png?imageView2/0/q/75|watermark/2/text/YmxvZy5ndW9iYW95b28uY29t/font/5b6u6L2v6ZuF6buR/fontsize/400/fill/I0NDQ0NDQw==/dissolve/50/gravity/SouthEast/dx/10/dy/10\" alt=\"image\"><br></div>\n\n<ul>\n<li>用户是网站A的注册用户，登录A网站。</li>\n<li>A网站核实用户身份是否正确（账号密码验证），如果用户身份正确，则下发cookie，cookie则保存到用户的浏览器中。</li>\n<li>当保存在用户浏览器中的cookie未过期时，用户又访问网站B。</li>\n<li>网站B中有引诱用户的一个点击，这个点击可能是一个链接，这个链接则是一个访问网站API的一个接口。</li>\n<li>那么用户一点击引诱链接则发出了对网站A的API的请求，此时请求上会带着保存在用户处的cookie，网站A收到请求，对身份确认时还认为是正确合法的用户，那么就会执行收到的请求。</li>\n</ul>\n<h5 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h5><ul>\n<li>通过referer检测用户提交（攻击者可以修改referer值）</li>\n<li>加token验证</li>\n<li>隐藏令牌（跟第二条类似，可以加在请求头中）</li>\n</ul>\n","categories":[],"tags":["javascript"]},{"title":"理解vue生命周期","url":"https://blog.guobaoyoo.com/2018/12/03/理解vue生命周期/","content":"<p>生命周期图就不放了，官网都有的，链接地址：<a href=\"https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\" target=\"_blank\" rel=\"noopener\">vue生命周期图</a><br>大概分为几个步骤，其实看英文都能看的出来，都是对应的，一个<code>before*</code>，一个<code>*ed</code>，<u>理解英文对应的意思能更好的理解生命周期的含义</u></p>\n<ul>\n<li><strong>beforeCreate</strong> : <strong>创建之前</strong>，刚刚new Vue()之后，数据还没有挂载呢，只有一个空壳</li>\n<li><strong>created</strong> : <strong>创建完成之后</strong>，这时候能使用并更改数据了，在这里更改数据不会触发 updated 函数</li>\n<li><strong>beforeMount</strong> : <strong>安装之前</strong>，虚拟dom已经完成，马上就要渲染，这是最后一次能修改数据了，不会触发 update 函数</li>\n<li><strong>mounted</strong> : <strong>安装完成之后</strong>，这时候真实dom已经渲染完事了，事件也已经挂载好了，可以进行一些真实的dom操作</li>\n<li><strong>beforeUpdate</strong> : <strong>更新（重新渲染）之前</strong>，重新渲染之前触发，然后重新构建虚拟dom跟之前的虚拟dom进行 diff 算法比较后重新渲染</li>\n<li><strong>updated</strong> : <strong>更新完成（重新渲染完成）之后</strong>，数据已经更改完成，dom也已经重新渲染完成</li>\n<li><strong>beforeDestroy</strong> : <strong>销毁之前</strong></li>\n<li><strong>destroy</strong> : <strong>销毁之后</strong></li>\n</ul>\n<a id=\"more\"></a>\n<p>具体的表现还有理解看代码吧。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>vue lifeCycle<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\"</span> <span class=\"attr\">integrity</span>=<span class=\"string\">\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myApp\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">my-temp</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-temp</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myTemp\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myP\"</span>&gt;</span>my-temp 组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"myData\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>myData: &#123;&#123; myData &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-success\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeData\"</span>&gt;</span>changeData<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-warning\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"destroyEvent\"</span>&gt;</span>destroy<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    Vue.component(<span class=\"string\">'myTemp'</span>, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      template: <span class=\"string\">'#myTemp'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          myData: <span class=\"string\">'hello world -- init'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        changeData () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">this</span>.myData = <span class=\"string\">'hello world -- changed'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        destroyEvent () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">this</span>.$destroy()</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      beforeCreate () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'beforeCreate: 刚刚new Vue()之后，数据还没有挂载呢，只有一个空壳'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.myData)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// undefined</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myP'</span>))</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// null</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      created () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'created: 这时候能使用并更改数据了，在这里更改数据不会触发 updated 函数'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.myData = <span class=\"string\">'hello world -- created'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.myData)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// hello world -- created</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'在这里可以在渲染前倒数第二次更改数据的机会，不会触发其他的钩子函数，一般可以在这里做初始数据的获取'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'接下来开始找实例或者组件对应的模板，编译模板为虚拟dom放入到render函数中准备渲染'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      beforeMount () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'beforeMount: 虚拟dom已经完成，马上就要渲染，这是最后一次能修改数据了，不会触发 update 函数'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.myData = <span class=\"string\">'hello world -- beforeMount'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.myData)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// hello world -- beforeMount</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myP'</span>))</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// null</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'接下来开始render，渲染真实dom'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      mounted () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'mounted: 这时候真实dom已经渲染完事了，事件也已经挂载好了，可以进行一些真实的dom操作'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myP'</span>))</span></span><br><span class=\"line\"><span class=\"xml\">        // <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myP\"</span>&gt;</span>A组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'当数据改变，进入到 beforeUpdate ，当调用销毁，进入到 beforeDestory'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      beforeUpdate () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'beforeUpdate: 重新渲染之前触发，然后重新构建虚拟dom跟之前的虚拟dom进行 diff 算法比较后重新渲染'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'!!!! 不能在此处更改数据，会陷入死循环'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      updated () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'updated: 数据已经更改完成，dom也已经重新渲染完成'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'!!!! 不能在此处更改数据，会陷入死循环'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      beforeDestroy () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'beforeDestroy: 销毁前执行'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'拆除监听，子组件，事件绑定'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      destroyed () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'destroyed: 销毁之后触发'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">new</span> Vue(&#123;&#125;).$mount(<span class=\"string\">'#myApp'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["vue"]},{"title":"js判断页面滑到底部","url":"https://blog.guobaoyoo.com/2018/11/29/js判断页面滑到底部/","content":"<p>js判断页面滑到底部算是比较简单的一个功能，记录一下涉及到的知识点</p>\n<h3 id=\"实现想法\"><a href=\"#实现想法\" class=\"headerlink\" title=\"实现想法\"></a>实现想法</h3><p>功能涉及到三个长度，分别是</p>\n<ul>\n<li>屏幕的高度或者说是窗口高度，用变量<code>CH</code>代替</li>\n<li>浏览器所有内容高度，用变量<code>DH</code>代替</li>\n<li>文档发生滚动时，被卷去的高度，用变量<code>SH</code>代替</li>\n</ul>\n<a id=\"more\"></a>\n<p><img src=\"http://static.guobaoyoo.com/img/blog/scroll.png?imageView2/0/q/75|watermark/2/text/YmxvZy5ndW9iYW95b28uY29t/font/5b6u6L2v6ZuF6buR/fontsize/400/fill/I0NDQ0NDQw==/dissolve/50/gravity/SouthEast/dx/10/dy/10\" alt=\"image\"><br>怎么算页面滑到底部呢？<br>就是 屏幕或者窗口的高度 加上文档被卷去的高度 等于 浏览器所有内容高度<br>即 <code>CH + SH === DH</code><br>那么就好说了只要获取这三个值做个if判断就可以了</p>\n<h3 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h3><p>在不同浏览器和不同规定DTD的情况下获取这三个高度是不同的，所以为了兼容写法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollBottom () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> SH = <span class=\"built_in\">document</span>.body.scrollTop || <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br><span class=\"line\">  <span class=\"keyword\">let</span> CH = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight</span><br><span class=\"line\">  <span class=\"keyword\">let</span> DH = <span class=\"built_in\">document</span>.documentElement.scrollHeight || <span class=\"built_in\">document</span>.body.scrollHeight</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (SH + CH) === DH</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["javascript"]},{"title":"linux环境安装nodejs","url":"https://blog.guobaoyoo.com/2018/11/28/linux环境安装nodejs/","content":"<h3 id=\"下载nodejs安装包并上传\"><a href=\"#下载nodejs安装包并上传\" class=\"headerlink\" title=\"下载nodejs安装包并上传\"></a>下载nodejs安装包并上传</h3><p>再官网选择正确的安装包下载<br><a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/download/</a><br>比如下载的包为 node-v10.14.0-linux-x64.tar.xz<br>然后用scp命令上传到服务器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp ./node-v10.14.0-linux-x64.tar.xz root@xx.xx.xxx.xx:/app/software</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h3 id=\"解压安装包\"><a href=\"#解压安装包\" class=\"headerlink\" title=\"解压安装包\"></a>解压安装包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf node-v10.14.0-linux-x64.tar.xz</span><br><span class=\"line\">tar -xvf node-v10.14.0-linux-x64 nodejs</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /app/software/nodejs/bin/npm /usr/local/bin/ </span><br><span class=\"line\">ln -s /app/software/nodejs/bin/node /usr/local/bin/</span><br></pre></td></tr></table></figure>\n<h3 id=\"检测\"><a href=\"#检测\" class=\"headerlink\" title=\"检测\"></a>检测</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"升级node版本\"><a href=\"#升级node版本\" class=\"headerlink\" title=\"升级node版本\"></a>升级node版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g n</span><br><span class=\"line\"></span><br><span class=\"line\">// 安装node最新版本：</span><br><span class=\"line\">n latest</span><br><span class=\"line\"></span><br><span class=\"line\">// 安装稳定版</span><br><span class=\"line\">n stable</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看已安装版本</span><br><span class=\"line\">n</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除指定版本</span><br><span class=\"line\">n rm 0.10.1</span><br><span class=\"line\"></span><br><span class=\"line\">// 指定某个版本运行脚本</span><br><span class=\"line\">n use 0.10.1</span><br></pre></td></tr></table></figure>","categories":[],"tags":["javascript"]},{"title":"有关audio的一些事","url":"https://blog.guobaoyoo.com/2018/11/26/audio/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>之前有做过一些跟audio相关的工作，大多数是h5页面中引入bgm，音效，在这里总结一下之前遇见的问题和解决的办法以及一些优化用户体验的实践。</p>\n<h3 id=\"audio标签\"><a href=\"#audio标签\" class=\"headerlink\" title=\"audio标签\"></a>audio标签</h3><p>以前的项目中使用方法<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://static.guobaoyoo.com/mp3/naonao/bgm.mp3\"</span> <span class=\"attr\">autoplay</span>=<span class=\"string\">\"autoplay\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span> <span class=\"attr\">loop</span>=<span class=\"string\">\"loop\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a> \n<h3 id=\"之前项目需求\"><a href=\"#之前项目需求\" class=\"headerlink\" title=\"之前项目需求\"></a>之前项目需求</h3><p>第一种：页面加载后，自动播放bgm<br>第二种：为点击添加音效</p>\n<h3 id=\"部分代码\"><a href=\"#部分代码\" class=\"headerlink\" title=\"部分代码\"></a>部分代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;audio src=<span class=\"string\">\"http://static.guobaoyoo.com/mp3/naonao/bgm.mp3\"</span> id=<span class=\"string\">\"myAudio\"</span> autoplay=<span class=\"string\">\"autoplay\"</span> controls=<span class=\"string\">\"controls\"</span> loop=<span class=\"string\">\"loop\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myAudio'</span>)</span><br><span class=\"line\">audio.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">audio.play()</span><br></pre></td></tr></table></figure>\n<h3 id=\"遇见问题以及解决办法\"><a href=\"#遇见问题以及解决办法\" class=\"headerlink\" title=\"遇见问题以及解决办法\"></a>遇见问题以及解决办法</h3><blockquote>\n<p>Note: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control.  </p>\n</blockquote>\n<p>mdn上给出的note，大概意思就是尽量避免使用autoplay，如果不得不用的话，应该让用户做操作，所以产品产出调整，页面加载后触发用户一个行为后让audio加载，完事再播放就ok了，<code>但是需要让用户做出操作</code>。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;audio src=<span class=\"string\">\"http://static.guobaoyoo.com/mp3/naonao/bgm.mp3\"</span> id=<span class=\"string\">\"myAudio\"</span> autoplay=<span class=\"string\">\"autoplay\"</span> controls=<span class=\"string\">\"controls\"</span> loop=<span class=\"string\">\"loop\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myAudio'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 在这里用户的一个行为触发，比如是个页面click事件</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  audio.load()</span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">audio.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">audio.play()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Web-Audio-API-AudioContext\"><a href=\"#Web-Audio-API-AudioContext\" class=\"headerlink\" title=\"Web Audio API AudioContext\"></a>Web Audio API AudioContext</h3><blockquote>\n<p>Web Audio API 提供了在Web上控制音频的一个非常有效通用的系统，允许开发者来自选音频源，对音频添加特效，使音频可视化，添加空间效果 （如平移），等等。</p>\n</blockquote>\n<p>api接口比较多，也没有一条一条具体去看，针对我想要的，引入第三方资源，然后控制播放，停止播放等等。</p>\n<p>上代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> AudioContext = <span class=\"built_in\">window</span>.AudioContext || <span class=\"built_in\">window</span>.webkitAudioContext</span><br><span class=\"line\"><span class=\"keyword\">let</span> audioCtx = AudioContext ? <span class=\"keyword\">new</span> AudioContext() : <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> bgmBuffer = &#123;</span><br><span class=\"line\">  getBuffer (link) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (audioCtx) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> request = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\">        request.open(<span class=\"string\">'GET'</span>, link, <span class=\"literal\">true</span>)</span><br><span class=\"line\">        request.responseType = <span class=\"string\">'arraybuffer'</span></span><br><span class=\"line\">        request.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          audioCtx.decodeAudioData(request.response, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">buffer</span>) </span>&#123;</span><br><span class=\"line\">            resolve(buffer)</span><br><span class=\"line\">          &#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'reject'</span>)</span><br><span class=\"line\">            reject(e)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        request.send()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'not support AudioContext'</span>))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  createSound (buffer) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (audioCtx.state === <span class=\"string\">'suspended'</span>) &#123;</span><br><span class=\"line\">      audioCtx.suspend().then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'重启audioCtx'</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> source = audioCtx.createBufferSource()</span><br><span class=\"line\">    source.buffer = buffer</span><br><span class=\"line\">    source.connect(audioCtx.destination)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> source</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> bgmBuffer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Audio <span class=\"keyword\">from</span> <span class=\"string\">'@/utils/audio'</span></span><br><span class=\"line\">data () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    transitionName: <span class=\"string\">''</span>,</span><br><span class=\"line\">    bgmBuffer: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    bgmSound: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    audioPlaying: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  playing () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$store.state.audioPlaying</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  getBgmSound () &#123;</span><br><span class=\"line\">    Audio.getBuffer(<span class=\"string\">'http://static.guobaoyoo.com/mp3/naonao/bgm.mp3'</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmBuffer = res</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmPlay(res)</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bgmPlay (buffer) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bgmSound = Audio.createSound(buffer)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bgmSound.loop = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.bgmSound)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.bgmSound !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmSound.start()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'BGM_PLAY'</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bgmStop () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.bgmSound !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmSound.stop()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'BGM_PLAY'</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bgmControl () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.playing)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.playing) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmPlay(<span class=\"keyword\">this</span>.bgmBuffer)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bgmStop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getBgmSound()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"探索遗留问题\"><a href=\"#探索遗留问题\" class=\"headerlink\" title=\"探索遗留问题\"></a>探索遗留问题</h3><ul>\n<li>放到手机中还是不能自动播放</li>\n<li>不能暂停</li>\n</ul>\n<h3 id=\"追加\"><a href=\"#追加\" class=\"headerlink\" title=\"追加\"></a>追加</h3><p>移动端微信中播放视频<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> video = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'video'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.WeixinJSBridge) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.WeixinJSBridge.invoke(<span class=\"string\">'getNetworkType'</span>, &#123;&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    video.play()</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.WeixinJSBridge.invoke(<span class=\"string\">'getNetworkType'</span>, &#123;&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">video.play()</span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["javascript"]},{"title":"My first blog","url":"https://blog.guobaoyoo.com/2018/11/25/markdown/","content":"<p>我的第一篇博客，记录一下markdown的常用语法</p>\n<h3 id=\"1-粗体\"><a href=\"#1-粗体\" class=\"headerlink\" title=\"1.粗体\"></a>1.粗体</h3><p>代码:<br><code>**bold**</code><br>表现:<br><strong>bold</strong></p>\n<a id=\"more\"></a>\n<h3 id=\"2-斜体\"><a href=\"#2-斜体\" class=\"headerlink\" title=\"2.斜体\"></a>2.斜体</h3><p>代码:<br><code>*italics*</code><br>表现:<br><em>italics</em></p>\n<h3 id=\"3-删除\"><a href=\"#3-删除\" class=\"headerlink\" title=\"3.删除\"></a>3.删除</h3><p>代码:<br><code>~~delete~~</code><br>表现:<br><del>delete</del></p>\n<h3 id=\"4-下划线\"><a href=\"#4-下划线\" class=\"headerlink\" title=\"4.下划线\"></a>4.下划线</h3><p>代码:<br><code>&lt;u&gt;underline&lt;/u&gt;</code><br>表现:<br><u>underline</u></p>\n<h3 id=\"5-标注mark\"><a href=\"#5-标注mark\" class=\"headerlink\" title=\"5.标注mark\"></a>5.标注mark</h3><p>代码:<br><code>==标注mark==</code><br>表现:<br>==标注mark==</p>\n<h3 id=\"6-标题\"><a href=\"#6-标题\" class=\"headerlink\" title=\"6.标题\"></a>6.标题</h3><p>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># h1</span><br><span class=\"line\">## h2</span><br><span class=\"line\">### h3</span><br><span class=\"line\">#### h4</span><br><span class=\"line\">##### h5</span><br><span class=\"line\">###### h6</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"7-引用\"><a href=\"#7-引用\" class=\"headerlink\" title=\"7.引用\"></a>7.引用</h3><p>代码:<br><code>&gt; quote</code><br>表现: </p>\n<blockquote>\n<p>quote</p>\n</blockquote>\n<h3 id=\"8-列表\"><a href=\"#8-列表\" class=\"headerlink\" title=\"8.列表\"></a>8.列表</h3><p>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- list-item</span><br><span class=\"line\">- list-item</span><br><span class=\"line\">- list-item</span><br><span class=\"line\">1. 1</span><br><span class=\"line\">2. 2</span><br><span class=\"line\">3. 3</span><br></pre></td></tr></table></figure></p>\n<p>表现: </p>\n<ul>\n<li>list-item</li>\n<li>list-item</li>\n<li>list-item</li>\n</ul>\n<ol>\n<li>1</li>\n<li>2</li>\n<li>3</li>\n</ol>\n<h3 id=\"9-超链接\"><a href=\"#9-超链接\" class=\"headerlink\" title=\"9.超链接\"></a>9.超链接</h3><p>代码:<br><code>[my-cat](http://www.guobaoyoo.com/naonao)</code><br>表现:<br><a href=\"http://www.guobaoyoo.com/naonao\" target=\"_blank\" rel=\"noopener\">my-cat</a></p>\n<h3 id=\"10-图片\"><a href=\"#10-图片\" class=\"headerlink\" title=\"10.图片\"></a>10.图片</h3><p>代码:<br><code>![image](http://static.guobaoyoo.com/img/naonao/IMG_0010.JPG)</code><br>表现:<br><img src=\"http://static.guobaoyoo.com/img/naonao/IMG_0010.JPG\" alt=\"image\"></p>\n<h3 id=\"11-代码块\"><a href=\"#11-代码块\" class=\"headerlink\" title=\"11.代码块\"></a>11.代码块</h3><p>代码:<br>```<br>  window.alert(‘hello world’)<br>```<br>表现:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.alert(&apos;hello world&apos;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"12-表格\"><a href=\"#12-表格\" class=\"headerlink\" title=\"12.表格\"></a>12.表格</h3><p>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">header 1    | header 2</span><br><span class=\"line\">---         | ---</span><br><span class=\"line\">row 1 col 1 | row 1 col 2</span><br><span class=\"line\">row 2 col 1 | row 2 col 2</span><br></pre></td></tr></table></figure></p>\n<p>表现: </p>\n<table>\n<thead>\n<tr>\n<th>header 1</th>\n<th>header 2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>row 1 col 1</td>\n<td>row 1 col 2</td>\n</tr>\n<tr>\n<td>row 2 col 1</td>\n<td>row 2 col 2</td>\n</tr>\n</tbody>\n</table>\n","categories":[],"tags":["markdown"]}]